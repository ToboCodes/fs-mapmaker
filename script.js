// Set map area and center view
const coord1 = [-39.603457,-73.038868];
const coord2 = [-39.808016,-72.774131];
let view = [-39.66123,-72.95155];

// Create map and set OSM tiles
let map = L.map('map', {
  maxZoom: 19,
  minZoom: 15,
  maxBounds: [
    coord1,
    coord2
  ],
}).setView(view, 16);
L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 19,
    attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap contributors</a>'
}).addTo(map);


// ckpunmep's Get coordinates by click on a map + Furqan Anas' Leaflet Draggable Marker
// let markerId = 0;
map.on('click', function(e) {
  let Lat = e.latlng.lat;
  let Lng = e.latlng.lng;
  let curLocation = [Lat, Lng];
  let marker = new L.marker(curLocation, {
    draggable: 'true'
  });
  map.addLayer(marker);

  // markerId += 1;
  // console.log("Added marker " + markerId);
  // console.log(Lat.toFixed(5) + "," + Lng.toFixed(5));

  marker.on('dragend', function(event) {
    let position = marker.getLatLng();
    marker.setLatLng(position, {
      draggable: 'true'
    }).bindPopup(position).update();
    Lat = position.lat;
    Lng = position.lng;
    console.log(Lat.toFixed(5) + "," + Lng.toFixed(5));
  });
});


// Set custom zones
const territorios = {
  zone1A: [[-39.66640,-72.95407], [-39.66638,-72.95283], [-39.66755,-72.95274], [-39.66758,-72.95401]],
  zone1B: [[-39.66765,-72.95401], [-39.66761,-72.95273], [-39.66849,-72.95269], [-39.66853,-72.95399]],
  zone1C: [[-39.66859,-72.95399], [-39.66856,-72.95269], [-39.66905,-72.95267], [-39.66908,-72.95399]],
  zone1D: [[-39.66914,-72.95399], [-39.66911,-72.95267], [-39.66959,-72.95264], [-39.66962,-72.95399]],
  zone2A: [[-39.66642,-72.95788], [-39.66646,-72.95777], [-39.66649,-72.95763], [-39.66646,-72.95618],
  [-39.66657,-72.95619], [-39.66663,-72.95648], [-39.66666,-72.95778]],
  zone2B: [[-39.66594,-72.95792], [-39.66619,-72.95784], [-39.66629,-72.95778], [-39.66633,-72.95771],
  [-39.66635,-72.95760], [-39.66628,-72.95421], [-39.66566,-72.95420], [-39.66522,-72.95384],
  [-39.66522,-72.95432], [-39.66567,-72.95467], [-39.66588,-72.95467]],
  zone2C: [[-39.66728,-72.95412], [-39.66791,-72.95410], [-39.66838,-72.95429], [-39.66838,-72.95466],
  [-39.66791,-72.95454], [-39.66729,-72.95453]],
  zone2D: [[-39.66841,-72.95430], [-39.67018,-72.95499], [-39.67051,-72.95474], [-39.67048,-72.95466],
  [-39.67018,-72.95487], [-39.66811,-72.95408], [-39.66990,-72.95407], [-39.66991,-72.95445],
  [-39.67017,-72.95455], [-39.67051,-72.95426], [-39.67080,-72.95485], [-39.67017,-72.95532],
  [-39.66841,-72.95467]],
  zone2E: [[-39.66969,-72.95398], [-39.66967,-72.95264], [-39.66992,-72.95263], [-39.66994,-72.95370],
  [-39.67021,-72.95384], [-39.67021,-72.95412], [-39.66995,-72.95398]],
  zone3A: [[-39.66638,-72.95273], [-39.66637,-72.95144], [-39.66753,-72.95122], [-39.66754,-72.95264]],
  zone3B: [[-39.66762,-72.95264], [-39.66761,-72.95120], [-39.66842,-72.95108], [-39.66846,-72.95177],
  [-39.66805,-72.95178], [-39.66805,-72.95187], [-39.66846,-72.95187], [-39.66848,-72.95259]],
  zone3C: [[-39.66856,-72.95258], [-39.66855,-72.95222], [-39.66921,-72.95216], [-39.66921,-72.95205],
  [-39.66855,-72.95211], [-39.66854,-72.95168], [-39.66896,-72.95164], [-39.66955,-72.95227],
  [-39.66958,-72.95236], [-39.66958,-72.95253]],
  zone4A: [[-39.66637,-72.95133], [-39.66635,-72.95003], [-39.66718,-72.94965], [-39.66751,-72.95111]],
  zone4B: [[-39.66760,-72.95109], [-39.66750,-72.95064], [-39.66776,-72.95050], [-39.66785,-72.95074],
  [-39.66792,-72.95070], [-39.66781,-72.95039], [-39.66759,-72.94975], [-39.66754,-72.94979],
  [-39.66773,-72.95039], [-39.66748,-72.95054], [-39.66727,-72.94960], [-39.66751,-72.94949],
  [-39.66775,-72.94933], [-39.66804,-72.94987], [-39.66839,-72.95098]],
  zone4C: [[-39.66783,-72.94925], [-39.66837,-72.94866], [-39.66899,-72.94760], [-39.66939,-72.94794],
  [-39.66876,-72.94909], [-39.66814,-72.94982]],
  zone5A: [[-39.66335,-72.95147], [-39.66413,-72.95109], [-39.66414,-72.95281], [-39.66386,-72.95282],
  [-39.66386,-72.95161], [-39.66336,-72.95187]],
  zone5B: [[-39.66426,-72.95274], [-39.66426,-72.95225], [-39.66511,-72.95196], [-39.66511,-72.95279],
  [-39.66434,-72.95281], [-39.66429,-72.95279]],
  zone5C: [[-39.66426,-72.95213], [-39.66425,-72.95103], [-39.66512,-72.95063], [-39.66511,-72.95184]],
  zone5D: [[-39.66525,-72.95057], [-39.66624,-72.95010], [-39.66625,-72.95136], [-39.66523,-72.95179]]
}

// Set zone colors
const colors = {
1: "#FE80A9", 2: "#FCAA0C", 3: "#FE7F26", 4: "#B3A2E6", 5: "#DA0022", 6: "#888888",
7: "#20B250", 8: "#5CF4F1", 9: "#77CDE8", 10: "#FD76B8", 11: "#C00000", 12: "#90E7B4",
13: "#EFE4AF", 14: "#FFF86E", 15: "#E65B00", 16: "#92914A",
17: "#EF00F1", 18: "#FF3E3D"
}

// Place custom zones
function createZones(obj, col) {
  for (let i in obj) {
      let num = i.match(/\d+/)[0];
      L.polygon(obj[i], {color: col[num], fillOpacity: 0.7, weight: 2}).addTo(map);
  }
}

createZones(territorios, colors)

// Bård Romstad's pure css divIcon labels
markers = {
  num: [[-39.66697,-72.95340], [-39.66785,-72.95437], [-39.66698,-72.95205], [-39.66690,-72.95055],
  [-39.66467,-72.95136], [-39.66364,-72.95855], [-39.66405,-72.95521], [-39.66264,-72.95575],
  [-39.66228,-72.95862], [-39.66083,-72.94925]],
  A: [[-39.66740,-72.95298], [-39.66666,-72.95730], [-39.66743,-72.95146], [-39.66685,-72.95024],
  [-39.66413,-72.95142], [-39.66514,-72.96088], [-39.66377,-72.95601], [-39.66262,-72.95627],
  [-39.66175,-72.95919], [-39.66102,-72.95055]],
  B: [[-39.66835,-72.95293], [-39.66624,-72.95599], [-39.66834,-72.95126], [-39.66771,-72.94972],
  [-39.66497,-72.95226], [-39.66462,-72.95827], [-39.66369,-72.95517], [-39.66282,-72.95589], 
  [-39.66234,-72.95760], [-39.66201,-72.94958]],
  C: [[-39.66893,-72.95288], [-39.66877,-72.95457], [-39.66902,-72.95177], [-39.66891,-72.94851],
  [-39.66504,-72.95107], [-39.66423,-72.95491], [-39.66305,-72.95560], [-39.66179,-72.95534]],
  D: [[-39.66947,-72.95283], [-39.66960,-72.95435], [-39.66617,-72.95058], [-39.66394,-72.95476],
  [-39.66330,-72.95532], [-39.66229,-72.95455]],
  E: [[-39.66995,-72.95330], [-39.66366,-72.95444], [-39.66255,-72.95548], [-39.65986,-72.95228]]
  }
  
  for (let item in markers) {
      for (let idx = 0; idx < markers[item].length; idx++) {
          if (item === 'num') {
              let pos = new L.LatLng(markers[item][idx][0],markers[item][idx][1]);
              let iconNum = (idx + 1);
              let icon = L.divIcon({
                  iconSize:null,
                  html:'<div class="map-label number"><div class="map-label-content">'+iconNum+'</div><div class="map-label-arrow"></div></div>'
                });
              L.marker(pos,{icon: icon}).addTo(map);
          } else {
            let pos = new L.LatLng(markers[item][idx][0],markers[item][idx][1]);
            let icon = L.divIcon({
              iconSize:null,
              html:'<div class="map-label square"><div class="map-label-content">'+item+'</div><div class="map-label-arrow"></div></div>'
            });
          L.marker(pos,{icon: icon}).addTo(map);
          }
      }
  }

// Enable device GPS
map.locate({watch: true, enableHighAccuracy: true, maximumAge: 2000});

// Add location marker
let gpsMarker = null;

function onLocationFound(e) {
  if (gpsMarker == null) {
    gpsMarker = L.marker(e.latlng).addTo(map);
  } else {
    gpsMarker.setLatLng(e.latlng);
  }
}

map.on('locationfound', onLocationFound);

// On location error
function onLocationError(e) {
  alert("No se pudo determinar su ubicación");
}

map.on('locationerror', onLocationError);